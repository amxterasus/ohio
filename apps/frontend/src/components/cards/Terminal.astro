<div class="relative w-full flex-col md:w-auto md:self-start flex aspect-video flex-grow self-start">
  <div class="border-foreground border-2 bg-background relative w-full h-96">
    <div class="bg-foreground flex flex-row justify-between px-2 py-1 text-xs text-background">
      <span class="font-bold">Terminal</span><span class="mb-1 h-0.5 w-2 self-end bg-background"></span>
    </div>
    <div class="flex flex-col overflow-auto p-4 font-mono text-sm">
      <div class="mb-2"><span id="output-lines"></span></div><span>╭╴😺 ~ 🐈 ~</span>
      <form id="terminal-form" class="flex items-center mt-2">
        <span>╰─→</span>
        <div
          class="flex-1 ml-2 bg-transparent outline-none border-none font-mono relative cursor-text min-h-[1.5em] text-ohio"
          tabindex="0"
        >
          <span id="input-value"></span>
          <span class="blinking-block-cursor2">█</span>
          <input
            id="terminal-input"
            class="flex-1 ml-2 bg-transparent outline-none border-none font-mono opacity-0 caret-transparent text-[15px]"
            type="text"
            autofocus
            autocomplete="off"
            spellcheck="false"
            placeholder=""
          />
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  import { actions } from 'astro:actions';
  const form = document.getElementById('terminal-form') as HTMLFormElement;
  const input = document.getElementById('terminal-input') as HTMLInputElement;
  const output = document.getElementById('output-lines') as HTMLSpanElement;
  const value = document.getElementById('input-value') as HTMLElement;

  input.addEventListener('input', (e) => {
    const target = e.target as HTMLInputElement;

    value.textContent = target.value;
  });

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const command = input.value.trim();
    if (!command) return;

    const userLine = document.createElement('div');
    userLine.innerHTML = `<span class="text-[#89b4fa]">╰─></span> <span>${command}</span>`;
    output.appendChild(userLine);

    const res = await actions.echoCommand({ command });

    const response = document.createElement('div');
    response.className = 'text-[#a6e3a1]';
    response.textContent = res.data ?? 'Error!';
    output.appendChild(response);

    input.value = '';
    value.textContent = '';
    output.scrollTop = output.scrollHeight;
  });
</script>
